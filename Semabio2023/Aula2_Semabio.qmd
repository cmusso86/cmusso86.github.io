---
title: "Aula 2 "
subtitle: "Semabio"
author: "Carolina Musso"
institute: "IB/UnB"
title-slide-attributes:
    data-background-image: img/fundo.png
    data-background-size: contain
    font-family: "Lato"
format:
  revealjs:
    embed-resources: true
    multiplex: true
    incremental: true
    logo: img/logo.png
    scrollable: true
    highlight-style: arrow
    theme: [style.scss]
    transition: fade
knitr:
  opts_chunk:
    echo: true
    warnings: false
editor: source
---

## Sobre o curso

-   **Estrutura**:

    -   Aula 1: Instala√ß√£o e Intro Rmarkdown
    -   **Aula 2 (hoje): Rmarkdown, Erros comuns, pacote dplyr**
    -   Aula 3: Gr√°ficos ggplot, Tabelas resumo e testes estat√≠sticos
    -   Aula 4: Pend√™ncias e Relat√≥rio automatizado final

## Nossa bibliografia

-   [The Epi-R Handbook](https://epirhandbook.com/en/index.html)

-   [CURSO-R Ci√™ncia de Dados em R](https://livro.curso-r.com/index.html)

-   [R for data Science](https://r4ds.had.co.nz)

-   **Outras** . . .

-   [Data Analysis and Visualisation in R for Ecologists](https://datacarpentry.org/R-ecology-lesson/00-before-we-start.html)

-   [R for ecological sciences](https://brouwern.github.io/BOOK_R_Ecological_Data_Science/)

-   [Modern Statistics with R](https://www.modernstatisticswithr.com)

# Revisando ...

## Os Quatro Paineis do R-Studio

![](img/paineis.png)

## Rmarkdown

-   Algo especial do R

-   Bem diferente de como foi criado nos anos 90

-   Rmarkdown ![](img/rmarkdown.png){width="164"}

-   Quarto ![](img/quarto.png){width="330" height="92"}

-   [YiHui](https://yihui.org/en/)

## R de tr√°s-pra-frente

-   Fizemos o download de um c√≥digo pronto.

-   Analisamos, rodasmos, sem "entender"!

. . .

## Voc√™ conseguiu diferenciar essas partes?

::: columns
::: {.column width="20%"}
-   Cabe√ßalho

-   Texto

-   C√≥digo
:::

::: {.column width="80%"}
![](img/tela_markdown.png){fig-align="center" width="859"}
:::
:::

## Cabe√ßalho

-   Metadados

-   Linguagem YAML

-   √â MUITO sens√≠vel (qualquer coisa atrapalha)

    ![](img/Captura%20de%20Tela%202022-10-24%20a%CC%80s%2017.41.50.png){width="455"}

## Texto

-   Markdown

    ![](img/texto.png)

## C√≥digo

-   √â o cora√ß√£o do R mesmo

    -   Linguagem de programa√ß√£o

    -   Como que difere de Excel (apontar e clicar?)

        ![](img/chunk.png)

## Brincando com o c√≥digo

![](img/dog.webp){fig-align="center" width="383"}

-   Mudar de cor, posi√ß√£o ...

-   Pr√°tica

## O que s√£o esses chunks afinal?

-   O "c√≥digo" pr√≥priamente dito

-   As partes dos chunks

    -   cabe√ßalho (do chunk)
    -   conte√∫do
        -   c√≥digo
        -   coment√°rios

# Pacotes

## E os pacotes o que s√£o?

-   Extens√µes do R

-   Teremos uma aula s√≥ sobre o uso de pacotes

    -   [CRAN](https://cran.r-project.org)

    -   Vamos usar muito o [tidyverse](https://r4ds.had.co.nz)

-   [EpiR-Handbook](https://epirhandbook.com/en/suggested-packages-1.html)

-   [Instala√ß√£o de pacotes, Curso-R](https://livro.curso-r.com/4-pacotes.html)

-   [Tidyverse, R4DS](https://r4ds.had.co.nz/introduction.html?q=pac#other-packages)

## Instalar e Carregar

-   Para utilizar um pacote √© preciso **instal√°-lo** (uma √∫nica vez) e depois **carreg√°-lo** (sempre que for usar)

. . .

### Jeito cl√°ssico

```{r eval=F, echo=T}
# para instalar
install.packages("tidyverse") # precisa estar entre aspas

# para carregar
library(tidyverse) #pode estar entre aspas ou n√£o
```

## Pacote Pacman

-   Mas n√≥s vamos fazer de outro jeito!

-   Vamos usar um pacote que gerencia pacotes (eu disse que tinha pacotes para tudo!)

. . .

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse")
```

-   Verifica a instala√ß√£o e carrega! : Garantir reprodutibilidade e automatiza√ß√£o.

-   O pacote √© o pacman, a fun√ß√£o que faz isso √© o p_load.

## O que s√£o fun√ß√µes

-   O pacote √© um conjunto de fun√ß√µes... mas o que s√£o fun√ß√µes?

-   "Fun√ß√µes em programa√ß√£o √© um conjunto de instru√ß√µes para simplificar uma tarefa repetitiva"

-   precisam de **argumentos**.

. . .

```{r, echo=T}
sqrt(9)
round(3.89, digits = 0 )
round(3.89,  0 )
```

## O pacote tidyverse

![](img/tidy.jpg){fig-align="center" width="600"}

## RBase

```{r echo=T}
head(cars[cars$speed>7,],3)
```

### Com o tidyverse

```{r echo=T}
cars %>% #isso chama pipe
  filter(speed>7) %>% 
  head(3)
```

# Erros comuns

-   [Erros comuns](https://epirhandbook.com/en/common-errors.html?q=error#common-errors)

-   [Pedindo Ajuda](https://livro.curso-r.com/3-1-pedindo-ajuda.html)

-   [Geting Help](https://epirhandbook.com/en/getting-help.html?q=help#getting-help)

-   [Palestra Latin-R: Conquistando Errores en R](https://www.youtube.com/watch?v=CAw3-pZhzfk), [material](https://paocorrales.github.io/errores_tutorial/)

## Primeira coisa

-   Ler o erro! üòÇ
    -   Nem sempre ajuda muito...mas sempre comece por a√≠!

    -   Aten√ß√£o que as vezes n√£o √© um Erro, e sim um "Warning"

        ![](img/warning.png)

## Em seguida

-   Perguntar ao ***Google!*** (ou ao ChatGPT)
    -   Simplesmente copie e cole o erro l√°!

        ![](img/fut.png){fig-align="center" width="412"}

## No Google

-   D√™ prefer√™cia resultados do:

    -   **StackOverflow ;** RBloggers ; RStudio / RProject

        ![](img/preg.jpeg){fig-align="center" width="386"}

-   E no ChatGPT?

## Documenta√ß√£o oficial

-   Buscar no CRAN o pdf da documenta√ß√£o oficial

-   Procurar na aba ajuda pela documenta√ß√£o da fun√ß√£o que est√° tentando usar

-   Vamos l√°!

## Erro de codifica√ß√£o

-   Resumidamente...

    ![](img/encoding.png)

-   Os caracteres especiais **no script** n√£o s√£o lidos corretamente

-   Como resolver?

    -   File -\> **Reopen with encoding**

## Objetos antigos na mem√≥ria

**Como eu sempre come√ßo meu c√≥digo?**

. . .

```{r eval=F, echo=T}
rm(list=ls())  #limpa  o ambiente
```

-   Isso vai garantir que voc√™ sempre vai come√ßar com o "Ambiente Limpo"

## E o contr√°rio?

### O que deveria estar na mem√≥ria n√£o estava

-   Esqueci de rodar alguma coisa

-   Lembre-se, para o computador, voc√™ tem que falar tudo em uma ordem muito espec√≠fica.

-   Afinal o que s√£o os **objetos** no R?

# Interl√∫dio:

-   Vamos achar um objeto no nosso c√≥digo ...

-   Pacotes, fun√ß√µes, objetos, argumentos

-   Google Forms

# Intervalo

# Parte 2: Pacote dplyr

## Leituras para aprofundamento

-   [EpiHandbook, 8.Cleaning data and core functions](https://epirhandbook.com/en/cleaning-data-and-core-functions.html)

-   [Curso-R, 7. Manipula√ß√£o](https://livro.curso-r.com/7-manipulacao.html)

-   [DataCamp, Introduction to the Tidyverse](https://app.datacamp.com/learn/courses/introduction-to-the-tidyverse)

-   [R4DS, 5. Data transformation](https://r4ds.had.co.nz/transform.html)

## Pacote do tidyverse

-   Vamos dar prefer√™ncia para fun√ß√µes desse pacote

    -   do pacote dplyr que faz parte do tidyverse

        ![](img/dplyr.png){width="171"}

## select()

-   Trabalhando com as colunas

-   As vezes queremos selecionar apenas algumas colunas (pode ser pesado e confuso manter todas as colunas sempre)

. . .

<center><img src="img/select2.png" height="300px&quot;"/></center>

. . .

```{r echo=F}
pacman::p_load(tidyverse, rio)

# importando a base
head(iris)
```

## Fun√ß√£o select()

-   Vimos que as fun√ß√µes s√£o intru√ß√µes: muitas vezes tem cara de verbo

-   a fun√ß√£o select precisa de 2 argumentos: a base de dados e as colunas que voc√™ quer selecionar

. . .

```{r}
# dplyr

select(iris, Sepal.Length, Sepal.Width) %>% 
  head(5)

# dplyr
select(iris, starts_with("Sepal")) %>% 
  head(5)
```

. . .

```{r}
# R base

iris[,c("Sepal.Length", "Sepal.Width")][1:6,]
```

## Fun√ß√£o filter()

-   Trabalhando com as linhas

-   As vezes queremos selecionar apenas algumas linhas: algum grupo espec√≠fico.

-   Racioc√≠nio parecido com a fun√ß√£o select(): precisa de 2 argumentos: a base de dados e a *condi√ß√£o sobre alguma coluna* para fazer o filtro.

. . .

```{r}
# dplyr
iris %>% # outra forma de fazer 
  filter(Species == "setosa") %>% 
  select(starts_with("Petal"), Species) %>% 
  head(5)
```

. . .

```{r}
#R base
iris[iris$Species=="setosa", ]
```

## mutate()

-   criar nosvas vari√°veis

. . .

```{r}
# dplyr

iris %>% 
  mutate(area = Petal.Length*Petal.Width/2) %>% 
  select(area) %>% 
  head(5)
```

. . .

```{r}
# R base
iris$area <- iris$Petal.Length*iris$Petal.Width/2
```

# group_by()

-   sempre agrupar e fazer alguma conta!

. . .

```{r}
# dplyr
iris %>% 
  mutate(area = Petal.Length*Petal.Width/2) %>% 
  group_by(Species) %>% 
  summarise(media=mean(area))
```

. . . 


<center>![](img/groupby.png){width="600"}</center>

# Obrigada
